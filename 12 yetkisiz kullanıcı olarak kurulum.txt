
Yetkisiz Kullanýcý Olarak Kurulum

Elbette sudo make altinstall komutunu verip Python’ý kurabilmek için root haklarýna sahip olmanýz gerekiyor. Ama eðer kullandýðýnýz sistemde bu haklara sahip deðilseniz Python’ý bu þekilde kuramazsýnýz. Kýsýtlý haklara sahip olduðunuz bir sistemde Python’ý ancak kendi ev dizininize ($HOME) kurabilirsiniz.

Eðer Python’ý yetkisiz kullanýcý olarak kuracaksanýz, öncelikle yukarýda bahsettiðimiz Python baðýmlýlýklarýnýn sisteminizde kurulu olup olmadýðýný kontrol etmeniz lazým. Kullandýðýnýz sistemde herhangi bir Python sürümü halihazýrda kuruluysa, bu baðýmlýlýklar da muhtemelen zaten kuruludur. Ama deðilse, bunlarý kurmasý için ya sistem yöneticisine ricada bulunacaksýnýz, ya da bu baðýmlýlýklarý da tek tek kendi ev dizininize kuracaksýnýz. Eðer sistem yöneticisini bu baðýmlýlýklarý kurmaya ikna edemezseniz, internet üzerinden bulabileceðiniz bilgiler yardýmýyla bu baðýmlýlýklarý tek tek elle kendiniz kurabilirsiniz. Ancak bu iþlemin epey zaman alacaðýný ve süreç sýrasýnda pek çok baþka baðýmlýlýkla da karþýlacaðýnýzý söyleyebilirim. O yüzden ne yapýp edip sistem yöneticisini baðýmlýlýklarý kurmaya ikna etmenizi tavsiye ederim... Tabii sistem yöneticisini bu baðýmlýlýklarý kurmaya ikna edebilirseniz, istediðiniz Python sürümünü de kurmaya ikna edebileceðinizi düþünebiliriz! Ama biz burada sizin Python’ý kendinizin kuracaðýný varsayarak yolumuza devam edelim.

Python’ý yetkisiz olarak kurmak, root haklarýyla kurmaya çok benzer. Aralarýnda yalnýzca bir-iki ufak fark vardýr. Mesela Python’ý yetkisiz kullanýcý olarak kurarken, ./configure komutunu þu þekilde vermeniz gerekiyor:

./configure --prefix=$HOME/python

Python’ý root haklarýyla kurduðunuzda Python /usr dizini altýna kurulacaktýr. Ancak siz yetkisiz kullanýcý olduðunuz için /usr dizinine herhangi bir þey kuramazsýnýz. Ýþte bu yüzden, configure betiðine verdiðimiz –prefix parametresi yardýmýyla Python’ý, yazma yetkimiz olan bir dizine kuruyoruz. Mesela yukarýdaki komut Python’ýn /usr dizinine deðil, ev dizininiz içinde python adlý bir klasöre kurulmasýný saðlayacaktýr. Elbette siz python yerine farklý bir dizin adý da belirleyebilirsiniz. Burada önemli olan nokta, –prefix parametresine vereceðiniz dizin adýnýn, sizin yazmaya yetkili olduðunuz bir dizin olmasýdýr.

Bu komutu çalýþtýrdýktan sonra make komutunu normal bir þekilde veriyoruz. Bunun ardýndan da make install (veya duruma göre make altinstall) komutuyla Python’ý ev dizinimize kuruyoruz. Burada make install komutunu sudo‘suz kullandýðýmýza dikkat edin. Çünkü, dediðimiz gibi, siz yetkili kullanýcý olmadýðýnýz için sudo komutunu kullanamazsýnýz.

Python’ý bu þekilde ev dizininiz altýnda bir klasöre kurduðunuzda Python ile ilgili bütün dosyalarýn bu klasör içinde yer aldýðýný göreceksiniz. Bu klasörü dikkatlice inceleyip neyin nerede olduðuna aþinalýk kazanmaya çalýþýn. Eðer mümkünse root haklarý ile kurulmuþ bir Python sürümünü inceleyerek, dosyalarýn iki farklý kurulum türünde nerelere kopyalandýðýný karþýlaþtýrýn.

Böylece Python programlama dilini bilgisayarýmýza nasýl kuracaðýmýzý öðrenmiþ olduk. Ama bu noktada bir uyarý yapmadan geçmeyelim: Python özellikle bazý GNU/Linux daðýtýmlarýnda pek çok sistem aracýyla sýký sýkýya baðlantýlýdýr. Yani Python, kullandýðýnýz daðýtýmýn belkemiði durumunda olabilir. Bu yüzden Python’ý kaynaktan derlemek bazý riskler taþýyabilir. Eðer yukarýda anlatýldýðý þekilde, kaynaktan Python derleyecekseniz, karþý karþýya olduðunuz risklerin farkýnda olmalýsýnýz. Ayrýca GNU/Linux üzerinde kaynaktan program derlemek konusunda tecrübeli deðilseniz ve eðer yukarýdaki açýklamalar size kafa karýþtýrýcý geliyorsa, mesela ‘Ben bu komutlarý nereye yazacaðým?’ diye bir soru geçiyorsa aklýnýzdan, kesinlikle daðýtýmýnýzla birlikte gelen Python sürümünü kullanmalýsýnýz. Python sürümlerini baþa baþ takip ettiði için, ben size Ubuntu GNU/Linux’u denemenizi önerebilirim. Ubuntu’nun depolarýnda Python’ýn en yeni sürümlerini rahatlýkla bulabilirsiniz. Ubuntu’nun resmi sitesine ubuntu.com adresinden, yerel Türkiye sitesine ise forum.ubuntu-tr.net adresinden ulaþabilirsiniz. Eðer þu anda kullandýðýnýz GNU/Linux daðýtýmýndan vazgeçmek istemiyorsanýz, sabit diskinizden küçük bir bölüm ayýrýp bu bölüme sadece Python çalýþmalarýnýz için Ubuntu daðýtýmýný da kurmayý tercih edebilirsiniz.

Yalnýz küçük bir uyarý daha yapalým. Kaynaktan kurulum ile ilgili bu söylediklerimizden, Python’ýn GNU/Linux’a kesinlikle kaynaktan derlenerek kurulmamasý gerektiði anlamý çýkmamalý. Yukarýdaki uyarýlarýn amacý, kullanýcýnýn Python’ý kaynaktan derlerken sadece biraz daha dikkatli olmasý gerektiðini hatýrlatmaktýr. Örneðin bu satýrlarýn yazarý, kullandýðý Ubuntu sisteminde Python3’ü kaynaktan derleyerek kullanmayý tercih ediyor ve herhangi bir problem yaþamýyor.

Bu önemli uyarýlarý da yaptýðýmýza göre gönül rahatlýðýyla yolumuza devam edebiliriz.

Kurduðumuz yeni Python’ý nasýl çalýþtýracaðýmýzý biraz sonra göreceðiz. Ama önce Windows kullanýcýlarýnýn Python3’ü nasýl kuracaklarýna bakalým.
